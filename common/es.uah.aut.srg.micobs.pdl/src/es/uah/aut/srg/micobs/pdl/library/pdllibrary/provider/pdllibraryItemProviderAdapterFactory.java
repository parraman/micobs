/*******************************************************************************
 * Copyright (c) 2013-2015 UAH Space Research Group.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     MICOBS SRG Team - Initial API and implementation
 ******************************************************************************/
package es.uah.aut.srg.micobs.pdl.library.pdllibrary.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import es.uah.aut.srg.micobs.pdl.library.pdllibrary.util.pdllibraryAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * @generated
 */
public class pdllibraryItemProviderAdapterFactory extends pdllibraryAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * @generated
	 */
	public pdllibraryItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLLibrary} instances.
	 * @generated
	 */
	protected MPDLLibraryItemProvider mpdlLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLLibraryAdapter() {
		if (mpdlLibraryItemProvider == null) {
			mpdlLibraryItemProvider = new MPDLLibraryItemProvider(this);
		}

		return mpdlLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLPackage} instances.
	 * @generated
	 */
	protected MPDLPackageItemProvider mpdlPackageItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLPackage}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLPackageAdapter() {
		if (mpdlPackageItemProvider == null) {
			mpdlPackageItemProvider = new MPDLPackageItemProvider(this);
		}

		return mpdlPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemOperatingSystemAPI} instances.
	 * @generated
	 */
	protected MPDLItemOperatingSystemAPIItemProvider mpdlItemOperatingSystemAPIItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemOperatingSystemAPI}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemOperatingSystemAPIAdapter() {
		if (mpdlItemOperatingSystemAPIItemProvider == null) {
			mpdlItemOperatingSystemAPIItemProvider = new MPDLItemOperatingSystemAPIItemProvider(this);
		}

		return mpdlItemOperatingSystemAPIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemOperatingSystemAPI} instances.
	 * @generated
	 */
	protected MPDLVersionedItemOperatingSystemAPIItemProvider mpdlVersionedItemOperatingSystemAPIItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemOperatingSystemAPI}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemOperatingSystemAPIAdapter() {
		if (mpdlVersionedItemOperatingSystemAPIItemProvider == null) {
			mpdlVersionedItemOperatingSystemAPIItemProvider = new MPDLVersionedItemOperatingSystemAPIItemProvider(this);
		}

		return mpdlVersionedItemOperatingSystemAPIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemOperatingSystem} instances.
	 * @generated
	 */
	protected MPDLItemOperatingSystemItemProvider mpdlItemOperatingSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemOperatingSystem}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemOperatingSystemAdapter() {
		if (mpdlItemOperatingSystemItemProvider == null) {
			mpdlItemOperatingSystemItemProvider = new MPDLItemOperatingSystemItemProvider(this);
		}

		return mpdlItemOperatingSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemOperatingSystem} instances.
	 * @generated
	 */
	protected MPDLVersionedItemOperatingSystemItemProvider mpdlVersionedItemOperatingSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemOperatingSystem}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemOperatingSystemAdapter() {
		if (mpdlVersionedItemOperatingSystemItemProvider == null) {
			mpdlVersionedItemOperatingSystemItemProvider = new MPDLVersionedItemOperatingSystemItemProvider(this);
		}

		return mpdlVersionedItemOperatingSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemArchitecture} instances.
	 * @generated
	 */
	protected MPDLItemArchitectureItemProvider mpdlItemArchitectureItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemArchitecture}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemArchitectureAdapter() {
		if (mpdlItemArchitectureItemProvider == null) {
			mpdlItemArchitectureItemProvider = new MPDLItemArchitectureItemProvider(this);
		}

		return mpdlItemArchitectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemArchitecture} instances.
	 * @generated
	 */
	protected MPDLVersionedItemArchitectureItemProvider mpdlVersionedItemArchitectureItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemArchitecture}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemArchitectureAdapter() {
		if (mpdlVersionedItemArchitectureItemProvider == null) {
			mpdlVersionedItemArchitectureItemProvider = new MPDLVersionedItemArchitectureItemProvider(this);
		}

		return mpdlVersionedItemArchitectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemMicroprocessor} instances.
	 * @generated
	 */
	protected MPDLItemMicroprocessorItemProvider mpdlItemMicroprocessorItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemMicroprocessor}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemMicroprocessorAdapter() {
		if (mpdlItemMicroprocessorItemProvider == null) {
			mpdlItemMicroprocessorItemProvider = new MPDLItemMicroprocessorItemProvider(this);
		}

		return mpdlItemMicroprocessorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemMicroprocessor} instances.
	 * @generated
	 */
	protected MPDLVersionedItemMicroprocessorItemProvider mpdlVersionedItemMicroprocessorItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemMicroprocessor}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemMicroprocessorAdapter() {
		if (mpdlVersionedItemMicroprocessorItemProvider == null) {
			mpdlVersionedItemMicroprocessorItemProvider = new MPDLVersionedItemMicroprocessorItemProvider(this);
		}

		return mpdlVersionedItemMicroprocessorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemBoard} instances.
	 * @generated
	 */
	protected MPDLItemBoardItemProvider mpdlItemBoardItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemBoard}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemBoardAdapter() {
		if (mpdlItemBoardItemProvider == null) {
			mpdlItemBoardItemProvider = new MPDLItemBoardItemProvider(this);
		}

		return mpdlItemBoardItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemBoard} instances.
	 * @generated
	 */
	protected MPDLVersionedItemBoardItemProvider mpdlVersionedItemBoardItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemBoard}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemBoardAdapter() {
		if (mpdlVersionedItemBoardItemProvider == null) {
			mpdlVersionedItemBoardItemProvider = new MPDLVersionedItemBoardItemProvider(this);
		}

		return mpdlVersionedItemBoardItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemPlatform} instances.
	 * @generated
	 */
	protected MPDLItemPlatformItemProvider mpdlItemPlatformItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemPlatform}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemPlatformAdapter() {
		if (mpdlItemPlatformItemProvider == null) {
			mpdlItemPlatformItemProvider = new MPDLItemPlatformItemProvider(this);
		}

		return mpdlItemPlatformItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemPlatform} instances.
	 * @generated
	 */
	protected MPDLVersionedItemPlatformItemProvider mpdlVersionedItemPlatformItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemPlatform}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemPlatformAdapter() {
		if (mpdlVersionedItemPlatformItemProvider == null) {
			mpdlVersionedItemPlatformItemProvider = new MPDLVersionedItemPlatformItemProvider(this);
		}

		return mpdlVersionedItemPlatformItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemCompiler} instances.
	 * @generated
	 */
	protected MPDLItemCompilerItemProvider mpdlItemCompilerItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemCompiler}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemCompilerAdapter() {
		if (mpdlItemCompilerItemProvider == null) {
			mpdlItemCompilerItemProvider = new MPDLItemCompilerItemProvider(this);
		}

		return mpdlItemCompilerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemCompiler} instances.
	 * @generated
	 */
	protected MPDLVersionedItemCompilerItemProvider mpdlVersionedItemCompilerItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemCompiler}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemCompilerAdapter() {
		if (mpdlVersionedItemCompilerItemProvider == null) {
			mpdlVersionedItemCompilerItemProvider = new MPDLVersionedItemCompilerItemProvider(this);
		}

		return mpdlVersionedItemCompilerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemDevice} instances.
	 * @generated
	 */
	protected MPDLItemDeviceItemProvider mpdlItemDeviceItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLItemDevice}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLItemDeviceAdapter() {
		if (mpdlItemDeviceItemProvider == null) {
			mpdlItemDeviceItemProvider = new MPDLItemDeviceItemProvider(this);
		}

		return mpdlItemDeviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemDevice} instances.
	 * @generated
	 */
	protected MPDLVersionedItemDeviceItemProvider mpdlVersionedItemDeviceItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.pdl.library.pdllibrary.MPDLVersionedItemDevice}.
	 * @generated
	 */
	@Override
	public Adapter createMPDLVersionedItemDeviceAdapter() {
		if (mpdlVersionedItemDeviceItemProvider == null) {
			mpdlVersionedItemDeviceItemProvider = new MPDLVersionedItemDeviceItemProvider(this);
		}

		return mpdlVersionedItemDeviceItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * @generated
	 */
	public void dispose() {
		if (mpdlLibraryItemProvider != null) mpdlLibraryItemProvider.dispose();
		if (mpdlPackageItemProvider != null) mpdlPackageItemProvider.dispose();
		if (mpdlItemOperatingSystemAPIItemProvider != null) mpdlItemOperatingSystemAPIItemProvider.dispose();
		if (mpdlVersionedItemOperatingSystemAPIItemProvider != null) mpdlVersionedItemOperatingSystemAPIItemProvider.dispose();
		if (mpdlItemOperatingSystemItemProvider != null) mpdlItemOperatingSystemItemProvider.dispose();
		if (mpdlVersionedItemOperatingSystemItemProvider != null) mpdlVersionedItemOperatingSystemItemProvider.dispose();
		if (mpdlItemArchitectureItemProvider != null) mpdlItemArchitectureItemProvider.dispose();
		if (mpdlVersionedItemArchitectureItemProvider != null) mpdlVersionedItemArchitectureItemProvider.dispose();
		if (mpdlItemMicroprocessorItemProvider != null) mpdlItemMicroprocessorItemProvider.dispose();
		if (mpdlVersionedItemMicroprocessorItemProvider != null) mpdlVersionedItemMicroprocessorItemProvider.dispose();
		if (mpdlItemBoardItemProvider != null) mpdlItemBoardItemProvider.dispose();
		if (mpdlVersionedItemBoardItemProvider != null) mpdlVersionedItemBoardItemProvider.dispose();
		if (mpdlItemPlatformItemProvider != null) mpdlItemPlatformItemProvider.dispose();
		if (mpdlVersionedItemPlatformItemProvider != null) mpdlVersionedItemPlatformItemProvider.dispose();
		if (mpdlItemCompilerItemProvider != null) mpdlItemCompilerItemProvider.dispose();
		if (mpdlVersionedItemCompilerItemProvider != null) mpdlVersionedItemCompilerItemProvider.dispose();
		if (mpdlItemDeviceItemProvider != null) mpdlItemDeviceItemProvider.dispose();
		if (mpdlVersionedItemDeviceItemProvider != null) mpdlVersionedItemDeviceItemProvider.dispose();
	}

}
