«IMPORT common»
«IMPORT mespswp»
«IMPORT mespswi»
«IMPORT mespcommon»

«EXTENSION template::MICOBSStringHelper»
«EXTENSION template::MESPUtil»

«DEFINE main FOR MMESPSWPPackageFile»
«FILE this.element.name.toLowerDefString() + "/config.h" -»
#ifndef «this.element.name.toUpperDefString()»__CONFIG_H
#define «this.element.name.toUpperDefString()»__CONFIG_H

#include <public/config.h>

«LET (MSwPackage)this.element AS swp -»
«FOREACH swp.getAllEnumParameterDefinitions() AS enumDef -»
«FOREACH enumDef.literals AS literal -»
«IF literal.metaType == common::MEnumParamRealLiteral ||
	literal.metaType == common::MEnumParamIntegerLiteral ||
	literal.metaType == common::MEnumParamIntegerLiteral -»
#define «("CONFIG_SWP_" + literal.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWP_" + literal.getFullObjectNameToElement()).toUpperDefString()»
«ENDIF -»
«ENDFOREACH -»
«ENDFOREACH -»
«FOREACH swp.getAllParameters(null) AS parameter -»
«IF parameter.metaType == common::MEnumParameter -»
#define «("CONFIG_SWP_" + parameter.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWP_" + parameter.getFullObjectNameToElement()).toUpperDefString()»
«FOREACH ((common::MEnumParameter)parameter).enumDefinition.literals AS literal -»
#define «("CONFIG_SWP_" + ((common::MEnumParameter)parameter).getFullObjectNameToElementWithoutVersion() + "_" + literal.name).toUpperDefString()» «("CONFIG_SWP_" + ((common::MEnumParameter)parameter).getFullObjectNameToElement() + "_" + literal.name).toUpperDefString()»
«ENDFOREACH -»
«ELSEIF parameter.metaType == MEnumParamSWPSPSwitch -»
#define «("CONFIG_SWP_" + parameter.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWP_" + parameter.getFullObjectNameToElement()).toUpperDefString()»
«FOREACH ((MEnumParamSWPSPSwitch)parameter).enumDefinition.literals AS literal -»
#define «("CONFIG_SWP_" + ((MEnumParamSWPSPSwitch)parameter).getFullObjectNameToElementWithoutVersion() + "_" + literal.name).toUpperDefString()» «("CONFIG_SWP_" + ((MEnumParamSWPSPSwitch)parameter).getFullObjectNameToElement() + "_" + literal.name).toUpperDefString()»
«ENDFOREACH -»
«ELSE -»
#define «("CONFIG_SWP_" + parameter.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWP_" + parameter.getFullObjectNameToElement()).toUpperDefString()»
«ENDIF -»
«ENDFOREACH -»
«FOREACH swp.supportedPlatforms AS swpsp -»
«FOREACH swpsp.parameters.typeSelect(common::MEnumParameterDefinition) AS enumDef -»
«FOREACH enumDef.literals AS literal -»
«IF literal.metaType == common::MEnumParamRealLiteral ||
	literal.metaType == common::MEnumParamIntegerLiteral ||
	literal.metaType == common::MEnumParamIntegerLiteral -»
#define «("CONFIG_SWP_" + literal.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWP_" + literal.getFullObjectNameToElement()).toUpperDefString()»
«ENDIF -»
«ENDFOREACH -»
«ENDFOREACH -»
«FOREACH swpsp.parameters AS parameter -»
«IF parameter.metaType != common::MEnumParameterDefinition -»
#define «("CONFIG_SWP_" + parameter.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWP_" + parameter.getFullObjectNameToElement()).toUpperDefString()»
«ENDIF -»
«IF parameter.metaType == common::MEnumParameter -»
«FOREACH ((common::MEnumParameter)parameter).enumDefinition.literals AS literal -»
#define «("CONFIG_SWP_" + ((common::MEnumParameter)parameter).getFullObjectNameToElementWithoutVersion() + "_" + literal.name).toUpperDefString()» «("CONFIG_SWP_" + ((common::MEnumParameter)parameter).getFullObjectNameToElement() + "_" + literal.name).toUpperDefString()»
«ENDFOREACH -»
«ENDIF -»
«ENDFOREACH -»
«ENDFOREACH -»
«FOREACH swp.getAllEffectivelyProvidedSwInterfaces() AS swi -»
«FOREACH swi.providedResources.typeSelect(MQuantifiableResource) AS resource -»

#define «("CONFIG_SWP_" + swp.name + "_DEMANDED_" + resource.getFullObjectNameToElement()).toUpperDefString()» «("CONFIG_" + swp.getElementName() + "_DEMANDED_" + resource.getFullObjectNameToElement()).toUpperDefString()» 
«ENDFOREACH -»
«ENDFOREACH -»
«FOREACH swp.requires.resourceDemands.typeSelect(MInstantiableResourceDemand) AS demand -»

«FOREACH demand.resource.parameters AS parameter -»
«IF parameter.metaType != common::MEnumParameterDefinition -»
#define «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name).toUpperDefString()» «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name).toUpperDefString()»
«ENDIF -»
«IF parameter.metaType == common::MEnumParameter -»
«FOREACH ((common::MEnumParameter)parameter).enumDefinition.literals AS literal -»
#define «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name + "_" + literal.name).toUpperDefString()» «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name + "_" + literal.name).toUpperDefString()»
«ENDFOREACH -»
«ENDIF -»
«ENDFOREACH -»
«ENDFOREACH -»
«FOREACH swp.supportedPlatforms AS swpsp -»
«FOREACH swpsp.requires.resourceDemands.typeSelect(MInstantiableResourceDemand) AS demand -»
«FOREACH demand.resource.parameters AS parameter -»

«IF parameter.metaType == common::MBooleanParameter -»
#ifdef «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name).toUpperDefString()»
#define «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name).toUpperDefString()»
#else
#undef «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name).toUpperDefString()»
#endif
«ELSEIF parameter.metaType == common::MEnumParameter -»
#define «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name).toUpperDefString()» «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name).toUpperDefString()»
«FOREACH ((common::MEnumParameter)parameter).enumDefinition.literals AS literal -»
#ifdef «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name + "_" + literal.name).toUpperDefString()»
#define «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name + "_" + literal.name).toUpperDefString()» «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name + "_" + literal.name).toUpperDefString()»
#endif
«ENDFOREACH -»
«ELSE -»
#define «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElementWithoutVersion() + "_" + parameter.name).toUpperDefString()» «("CONFIG_SWI_" + demand.resource.getFullObjectNameToElement() + "_" + demand.getFullObjectNameToElement() + "_" + parameter.name).toUpperDefString()»
«ENDIF -»
«ENDFOREACH -»
«ENDFOREACH -»
«ENDFOREACH -»
«ENDLET -»
«IF this.element.metaType == MDriverSwPackage -»
«LET (MDriverSwPackage)this.element AS drvswp -»
«FOREACH drvswp.supportedPlatforms AS swpsp -»
«LET (MDriverSwPackageSupportedPlatform)swpsp AS drvsp -»
«FOREACH drvsp.supportedDevices AS supportedDevice -»

#define «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElementWithoutVersion()).toUpperDefString()» «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement()).toUpperDefString()»
#define «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElementWithoutVersion() + "_NAME").toUpperDefString()» «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_NAME").toUpperDefString()»
«FOREACH supportedDevice.device.parameters AS parameter -»
«IF parameter.metaType == common::MBooleanParameter -»
#define «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElementWithoutVersion() + "_PARAM_" + parameter.name).toUpperDefString()» «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_PARAM_" + parameter.name).toUpperDefString()»
#else 
#undef «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElementWithoutVersion() + "_PARAM_" + parameter.name).toUpperDefString()»
#endif
«ELSEIF parameter.metaType == common::MEnumParameter -»
#define «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElementWithoutVersion() + "_PARAM_" + parameter.name).toUpperDefString()» «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_PARAM_" + parameter.name).toUpperDefString()»
«FOREACH ((common::MEnumParameter)parameter).enumDefinition.literals AS literal -»
#ifdef «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_PARAM_" + parameter.name + "_" + literal.name).toUpperDefString()»
#define «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_PARAM_" + parameter.name + "_" + literal.name).toUpperDefString()» «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_PARAM_" + parameter.name + "_" + literal.name).toUpperDefString()»
#endif
«ENDFOREACH -»
«ELSE -»
#define «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElementWithoutVersion() + "_PARAM_" + parameter.name).toUpperDefString()» «("CONFIG_SWPDEV_" + supportedDevice.getFullObjectNameToElement() + "_PARAM_" + parameter.name).toUpperDefString()»
«ENDIF -»
«ENDFOREACH -»
«ENDFOREACH -»
«ENDLET -»
«ENDFOREACH -»
«ENDLET -»
«ENDIF -»

«PROTECT CSTART '/*' CEND '*/' ID this.element.name.toLowerDefString() + "_config_h"»


    // This is a protected region as long as you keep the marks :-)


«ENDPROTECT»

#endif // «this.element.name.toUpperDefString()»__CONFIG_H
«ENDFILE -»
«ENDDEFINE»