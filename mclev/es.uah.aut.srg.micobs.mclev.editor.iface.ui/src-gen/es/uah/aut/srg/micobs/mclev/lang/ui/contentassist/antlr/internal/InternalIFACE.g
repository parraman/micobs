/*
* generated by Xtext
*/
grammar InternalIFACE;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package es.uah.aut.srg.micobs.mclev.lang.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package es.uah.aut.srg.micobs.mclev.lang.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import es.uah.aut.srg.micobs.mclev.lang.services.IFACEGrammarAccess;

}

@parser::members {
 
 	private IFACEGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(IFACEGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMMCLEVIFACEPackageFile
entryRuleMMCLEVIFACEPackageFile 
:
{ before(grammarAccess.getMMCLEVIFACEPackageFileRule()); }
	 ruleMMCLEVIFACEPackageFile
{ after(grammarAccess.getMMCLEVIFACEPackageFileRule()); } 
	 EOF 
;

// Rule MMCLEVIFACEPackageFile
ruleMMCLEVIFACEPackageFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getGroup()); }
(rule__MMCLEVIFACEPackageFile__Group__0)
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMMCLEVIFACEPackageElement
entryRuleMMCLEVIFACEPackageElement 
:
{ before(grammarAccess.getMMCLEVIFACEPackageElementRule()); }
	 ruleMMCLEVIFACEPackageElement
{ after(grammarAccess.getMMCLEVIFACEPackageElementRule()); } 
	 EOF 
;

// Rule MMCLEVIFACEPackageElement
ruleMMCLEVIFACEPackageElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMMCLEVIFACEPackageElementAccess().getMInterfaceParserRuleCall()); }
	ruleMInterface
{ after(grammarAccess.getMMCLEVIFACEPackageElementAccess().getMInterfaceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersion
entryRuleVersion 
:
{ before(grammarAccess.getVersionRule()); }
	 ruleVersion
{ after(grammarAccess.getVersionRule()); } 
	 EOF 
;

// Rule Version
ruleVersion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionAccess().getGroup()); }
(rule__Version__Group__0)
{ after(grammarAccess.getVersionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersionedQualifiedName
entryRuleVersionedQualifiedName 
:
{ before(grammarAccess.getVersionedQualifiedNameRule()); }
	 ruleVersionedQualifiedName
{ after(grammarAccess.getVersionedQualifiedNameRule()); } 
	 EOF 
;

// Rule VersionedQualifiedName
ruleVersionedQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionedQualifiedNameAccess().getGroup()); }
(rule__VersionedQualifiedName__Group__0)
{ after(grammarAccess.getVersionedQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersionedQualifiedReferenceName
entryRuleVersionedQualifiedReferenceName 
:
{ before(grammarAccess.getVersionedQualifiedReferenceNameRule()); }
	 ruleVersionedQualifiedReferenceName
{ after(grammarAccess.getVersionedQualifiedReferenceNameRule()); } 
	 EOF 
;

// Rule VersionedQualifiedReferenceName
ruleVersionedQualifiedReferenceName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getGroup()); }
(rule__VersionedQualifiedReferenceName__Group__0)
{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMInterface
entryRuleMInterface 
:
{ before(grammarAccess.getMInterfaceRule()); }
	 ruleMInterface
{ after(grammarAccess.getMInterfaceRule()); } 
	 EOF 
;

// Rule MInterface
ruleMInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMInterfaceAccess().getGroup()); }
(rule__MInterface__Group__0)
{ after(grammarAccess.getMInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Version__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getVersionAccess().getGroup_0_1()); }
(rule__Version__Group_0_1__0)
{ after(grammarAccess.getVersionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getVersionAccess().getGroup_1_1_1()); }
(rule__Version__Group_1_1_1__0)
{ after(grammarAccess.getVersionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MMCLEVIFACEPackageFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group__0__Impl
	rule__MMCLEVIFACEPackageFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MMCLEVIFACEPackageFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group__1__Impl
	rule__MMCLEVIFACEPackageFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageAssignment_1()); }
(rule__MMCLEVIFACEPackageFile__PackageAssignment_1)
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MMCLEVIFACEPackageFile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group__2__Impl
	rule__MMCLEVIFACEPackageFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MMCLEVIFACEPackageFile__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group__3__Impl
	rule__MMCLEVIFACEPackageFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getGroup_3()); }
(rule__MMCLEVIFACEPackageFile__Group_3__0)*
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MMCLEVIFACEPackageFile__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getElementAssignment_4()); }
(rule__MMCLEVIFACEPackageFile__ElementAssignment_4)
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getElementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MMCLEVIFACEPackageFile__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group_3__0__Impl
	rule__MMCLEVIFACEPackageFile__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportKeyword_3_0()); }

	'import' 

{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MMCLEVIFACEPackageFile__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group_3__1__Impl
	rule__MMCLEVIFACEPackageFile__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportsAssignment_3_1()); }
(rule__MMCLEVIFACEPackageFile__ImportsAssignment_3_1)
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MMCLEVIFACEPackageFile__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MMCLEVIFACEPackageFile__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Version__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__0__Impl
	rule__Version__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getAlternatives_0()); }
(rule__Version__Alternatives_0)
{ after(grammarAccess.getVersionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getGroup_1()); }
(rule__Version__Group_1__0)*
{ after(grammarAccess.getVersionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Version__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group_0_1__0__Impl
	rule__Version__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_0_1_0()); }
(	RULE_INT)?
{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getIDTerminalRuleCall_0_1_1()); }
	RULE_ID
{ after(grammarAccess.getVersionAccess().getIDTerminalRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Version__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group_1__0__Impl
	rule__Version__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getVersionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getAlternatives_1_1()); }
(rule__Version__Alternatives_1_1)
{ after(grammarAccess.getVersionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Version__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group_1_1_1__0__Impl
	rule__Version__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getINTTerminalRuleCall_1_1_1_0()); }
(	RULE_INT)?
{ after(grammarAccess.getVersionAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Version__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Version__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Version__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionAccess().getIDTerminalRuleCall_1_1_1_1()); }
	RULE_ID
{ after(grammarAccess.getVersionAccess().getIDTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VersionedQualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedName__Group__0__Impl
	rule__VersionedQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedNameAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getVersionedQualifiedNameAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedName__Group__1__Impl
	rule__VersionedQualifiedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedNameAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getVersionedQualifiedNameAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedName__Group__2__Impl
	rule__VersionedQualifiedName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedNameAccess().getVersionParserRuleCall_2()); }
	ruleVersion
{ after(grammarAccess.getVersionedQualifiedNameAccess().getVersionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedName__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedName__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedName__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedNameAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getVersionedQualifiedNameAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VersionedQualifiedReferenceName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group__0__Impl
	rule__VersionedQualifiedReferenceName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getGroup_0()); }
(rule__VersionedQualifiedReferenceName__Group_0__0)?
{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedReferenceName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group__1__Impl
	rule__VersionedQualifiedReferenceName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedReferenceName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getGroup_2()); }
(rule__VersionedQualifiedReferenceName__Group_2__0)*
{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VersionedQualifiedReferenceName__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group_0__0__Impl
	rule__VersionedQualifiedReferenceName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getVersionedQualifiedNameParserRuleCall_0_0()); }
	ruleVersionedQualifiedName
{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getVersionedQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedReferenceName__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VersionedQualifiedReferenceName__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group_2__0__Impl
	rule__VersionedQualifiedReferenceName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getColonColonKeyword_2_0()); }

	'::' 

{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getColonColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersionedQualifiedReferenceName__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersionedQualifiedReferenceName__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersionedQualifiedReferenceName__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersionedQualifiedReferenceNameAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getVersionedQualifiedReferenceNameAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MInterface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__0__Impl
	rule__MInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getInterfaceKeyword_0()); }

	'interface' 

{ after(grammarAccess.getMInterfaceAccess().getInterfaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__1__Impl
	rule__MInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getDomainAssignment_1()); }
(rule__MInterface__DomainAssignment_1)
{ after(grammarAccess.getMInterfaceAccess().getDomainAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__2__Impl
	rule__MInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getColonColonKeyword_2()); }

	'::' 

{ after(grammarAccess.getMInterfaceAccess().getColonColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__3__Impl
	rule__MInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getTypeAssignment_3()); }
(rule__MInterface__TypeAssignment_3)
{ after(grammarAccess.getMInterfaceAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__4__Impl
	rule__MInterface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getNameAssignment_4()); }
(rule__MInterface__NameAssignment_4)
{ after(grammarAccess.getMInterfaceAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__5__Impl
	rule__MInterface__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getGroup_5()); }
(rule__MInterface__Group_5__0)?
{ after(grammarAccess.getMInterfaceAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__6__Impl
	rule__MInterface__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getMInterfaceAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__7__Impl
	rule__MInterface__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getVersionKeyword_7()); }

	'version' 

{ after(grammarAccess.getMInterfaceAccess().getVersionKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__8__Impl
	rule__MInterface__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getColonEqualsSignKeyword_8()); }

	':=' 

{ after(grammarAccess.getMInterfaceAccess().getColonEqualsSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__9__Impl
	rule__MInterface__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getVersionAssignment_9()); }
(rule__MInterface__VersionAssignment_9)
{ after(grammarAccess.getMInterfaceAccess().getVersionAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__10__Impl
	rule__MInterface__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getMInterfaceAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__11__Impl
	rule__MInterface__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getMInterfaceAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getSemicolonKeyword_12()); }

	';' 

{ after(grammarAccess.getMInterfaceAccess().getSemicolonKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__MInterface__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group_5__0__Impl
	rule__MInterface__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsKeyword_5_0()); }

	'extends' 

{ after(grammarAccess.getMInterfaceAccess().getExtendsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group_5__1__Impl
	rule__MInterface__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsAssignment_5_1()); }
(rule__MInterface__ExtendsAssignment_5_1)
{ after(grammarAccess.getMInterfaceAccess().getExtendsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getGroup_5_2()); }
(rule__MInterface__Group_5_2__0)*
{ after(grammarAccess.getMInterfaceAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MInterface__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group_5_2__0__Impl
	rule__MInterface__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getMInterfaceAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MInterface__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MInterface__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsAssignment_5_2_1()); }
(rule__MInterface__ExtendsAssignment_5_2_1)
{ after(grammarAccess.getMInterfaceAccess().getExtendsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MMCLEVIFACEPackageFile__PackageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageMMCLEVPackageCrossReference_1_0()); }
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageMMCLEVPackageQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageMMCLEVPackageQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getPackageMMCLEVPackageCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__ImportsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportsMCommonPackageCrossReference_3_1_0()); }
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportsMCommonPackageQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportsMCommonPackageQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getImportsMCommonPackageCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MMCLEVIFACEPackageFile__ElementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMMCLEVIFACEPackageFileAccess().getElementMMCLEVIFACEPackageElementParserRuleCall_4_0()); }
	ruleMMCLEVIFACEPackageElement{ after(grammarAccess.getMMCLEVIFACEPackageFileAccess().getElementMMCLEVIFACEPackageElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__DomainAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getDomainMDomainCrossReference_1_0()); }
(
{ before(grammarAccess.getMInterfaceAccess().getDomainMDomainVersionedQualifiedNameParserRuleCall_1_0_1()); }
	ruleVersionedQualifiedName{ after(grammarAccess.getMInterfaceAccess().getDomainMDomainVersionedQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMInterfaceAccess().getDomainMDomainCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getTypeMInterfaceTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getMInterfaceAccess().getTypeMInterfaceTypeVersionedQualifiedReferenceNameParserRuleCall_3_0_1()); }
	ruleVersionedQualifiedReferenceName{ after(grammarAccess.getMInterfaceAccess().getTypeMInterfaceTypeVersionedQualifiedReferenceNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMInterfaceAccess().getTypeMInterfaceTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getMInterfaceAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__ExtendsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceCrossReference_5_1_0()); }
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceVersionedQualifiedNameParserRuleCall_5_1_0_1()); }
	ruleVersionedQualifiedName{ after(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceVersionedQualifiedNameParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__ExtendsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceCrossReference_5_2_1_0()); }
(
{ before(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceVersionedQualifiedNameParserRuleCall_5_2_1_0_1()); }
	ruleVersionedQualifiedName{ after(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceVersionedQualifiedNameParserRuleCall_5_2_1_0_1()); }
)
{ after(grammarAccess.getMInterfaceAccess().getExtendsMInterfaceCrossReference_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MInterface__VersionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMInterfaceAccess().getVersionVersionParserRuleCall_9_0()); }
	ruleVersion{ after(grammarAccess.getMInterfaceAccess().getVersionVersionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


