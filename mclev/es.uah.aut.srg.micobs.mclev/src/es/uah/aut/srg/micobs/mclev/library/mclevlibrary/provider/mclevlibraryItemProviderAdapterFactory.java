/*******************************************************************************
 * Copyright (c) 2013-2015 UAH Space Research Group.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     MICOBS SRG Team - Initial API and implementation
 ******************************************************************************/
package es.uah.aut.srg.micobs.mclev.library.mclevlibrary.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import es.uah.aut.srg.micobs.mclev.library.mclevlibrary.util.mclevlibraryAdapterFactory;
import es.uah.aut.srg.micobs.util.impl.MICOBSAdapterFactoryLabelProvider.IStyledTextProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * @generated
 */
public class mclevlibraryItemProviderAdapterFactory extends mclevlibraryAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * @generated NOT
	 */
	public mclevlibraryItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IStyledTextProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVLibrary} instances.
	 * @generated
	 */
	protected MMCLEVLibraryItemProvider mmclevLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVLibraryAdapter() {
		if (mmclevLibraryItemProvider == null) {
			mmclevLibraryItemProvider = new MMCLEVLibraryItemProvider(this);
		}

		return mmclevLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVPackage} instances.
	 * @generated
	 */
	protected MMCLEVPackageItemProvider mmclevPackageItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVPackage}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVPackageAdapter() {
		if (mmclevPackageItemProvider == null) {
			mmclevPackageItemProvider = new MMCLEVPackageItemProvider(this);
		}

		return mmclevPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemComponent} instances.
	 * @generated
	 */
	protected MMCLEVItemComponentItemProvider mmclevItemComponentItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemComponent}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemComponentAdapter() {
		if (mmclevItemComponentItemProvider == null) {
			mmclevItemComponentItemProvider = new MMCLEVItemComponentItemProvider(this);
		}

		return mmclevItemComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemComponent} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemComponentItemProvider mmclevVersionedItemComponentItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemComponent}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemComponentAdapter() {
		if (mmclevVersionedItemComponentItemProvider == null) {
			mmclevVersionedItemComponentItemProvider = new MMCLEVVersionedItemComponentItemProvider(this);
		}

		return mmclevVersionedItemComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemSAI} instances.
	 * @generated
	 */
	protected MMCLEVItemSAIItemProvider mmclevItemSAIItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemSAI}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemSAIAdapter() {
		if (mmclevItemSAIItemProvider == null) {
			mmclevItemSAIItemProvider = new MMCLEVItemSAIItemProvider(this);
		}

		return mmclevItemSAIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemSAI} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemSAIItemProvider mmclevVersionedItemSAIItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemSAI}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemSAIAdapter() {
		if (mmclevVersionedItemSAIItemProvider == null) {
			mmclevVersionedItemSAIItemProvider = new MMCLEVVersionedItemSAIItemProvider(this);
		}

		return mmclevVersionedItemSAIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemInterface} instances.
	 * @generated
	 */
	protected MMCLEVItemInterfaceItemProvider mmclevItemInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemInterface}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemInterfaceAdapter() {
		if (mmclevItemInterfaceItemProvider == null) {
			mmclevItemInterfaceItemProvider = new MMCLEVItemInterfaceItemProvider(this);
		}

		return mmclevItemInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemInterface} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemInterfaceItemProvider mmclevVersionedItemInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemInterface}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemInterfaceAdapter() {
		if (mmclevVersionedItemInterfaceItemProvider == null) {
			mmclevVersionedItemInterfaceItemProvider = new MMCLEVVersionedItemInterfaceItemProvider(this);
		}

		return mmclevVersionedItemInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemInterfaceMapping} instances.
	 * @generated
	 */
	protected MMCLEVItemInterfaceMappingItemProvider mmclevItemInterfaceMappingItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemInterfaceMapping}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemInterfaceMappingAdapter() {
		if (mmclevItemInterfaceMappingItemProvider == null) {
			mmclevItemInterfaceMappingItemProvider = new MMCLEVItemInterfaceMappingItemProvider(this);
		}

		return mmclevItemInterfaceMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemInterfaceMapping} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemInterfaceMappingItemProvider mmclevVersionedItemInterfaceMappingItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemInterfaceMapping}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemInterfaceMappingAdapter() {
		if (mmclevVersionedItemInterfaceMappingItemProvider == null) {
			mmclevVersionedItemInterfaceMappingItemProvider = new MMCLEVVersionedItemInterfaceMappingItemProvider(this);
		}

		return mmclevVersionedItemInterfaceMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemServiceLibrary} instances.
	 * @generated
	 */
	protected MMCLEVItemServiceLibraryItemProvider mmclevItemServiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemServiceLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemServiceLibraryAdapter() {
		if (mmclevItemServiceLibraryItemProvider == null) {
			mmclevItemServiceLibraryItemProvider = new MMCLEVItemServiceLibraryItemProvider(this);
		}

		return mmclevItemServiceLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemServiceLibrary} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemServiceLibraryItemProvider mmclevVersionedItemServiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemServiceLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemServiceLibraryAdapter() {
		if (mmclevVersionedItemServiceLibraryItemProvider == null) {
			mmclevVersionedItemServiceLibraryItemProvider = new MMCLEVVersionedItemServiceLibraryItemProvider(this);
		}

		return mmclevVersionedItemServiceLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemIODomain} instances.
	 * @generated
	 */
	protected MMCLEVItemIODomainItemProvider mmclevItemIODomainItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemIODomain}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemIODomainAdapter() {
		if (mmclevItemIODomainItemProvider == null) {
			mmclevItemIODomainItemProvider = new MMCLEVItemIODomainItemProvider(this);
		}

		return mmclevItemIODomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemIODomain} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemIODomainItemProvider mmclevVersionedItemIODomainItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemIODomain}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemIODomainAdapter() {
		if (mmclevVersionedItemIODomainItemProvider == null) {
			mmclevVersionedItemIODomainItemProvider = new MMCLEVVersionedItemIODomainItemProvider(this);
		}

		return mmclevVersionedItemIODomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemAODomain} instances.
	 * @generated
	 */
	protected MMCLEVItemAODomainItemProvider mmclevItemAODomainItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemAODomain}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemAODomainAdapter() {
		if (mmclevItemAODomainItemProvider == null) {
			mmclevItemAODomainItemProvider = new MMCLEVItemAODomainItemProvider(this);
		}

		return mmclevItemAODomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemAODomain} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemAODomainItemProvider mmclevVersionedItemAODomainItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemAODomain}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemAODomainAdapter() {
		if (mmclevVersionedItemAODomainItemProvider == null) {
			mmclevVersionedItemAODomainItemProvider = new MMCLEVVersionedItemAODomainItemProvider(this);
		}

		return mmclevVersionedItemAODomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemMCAD} instances.
	 * @generated
	 */
	protected MMCLEVItemMCADItemProvider mmclevItemMCADItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemMCAD}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemMCADAdapter() {
		if (mmclevItemMCADItemProvider == null) {
			mmclevItemMCADItemProvider = new MMCLEVItemMCADItemProvider(this);
		}

		return mmclevItemMCADItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemMCAD} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemMCADItemProvider mmclevVersionedItemMCADItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemMCAD}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemMCADAdapter() {
		if (mmclevVersionedItemMCADItemProvider == null) {
			mmclevVersionedItemMCADItemProvider = new MMCLEVVersionedItemMCADItemProvider(this);
		}

		return mmclevVersionedItemMCADItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemAbstractComponent} instances.
	 * @generated
	 */
	protected MMCLEVItemAbstractComponentItemProvider mmclevItemAbstractComponentItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemAbstractComponent}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemAbstractComponentAdapter() {
		if (mmclevItemAbstractComponentItemProvider == null) {
			mmclevItemAbstractComponentItemProvider = new MMCLEVItemAbstractComponentItemProvider(this);
		}

		return mmclevItemAbstractComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemAbstractComponent} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemAbstractComponentItemProvider mmclevVersionedItemAbstractComponentItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemAbstractComponent}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemAbstractComponentAdapter() {
		if (mmclevVersionedItemAbstractComponentItemProvider == null) {
			mmclevVersionedItemAbstractComponentItemProvider = new MMCLEVVersionedItemAbstractComponentItemProvider(this);
		}

		return mmclevVersionedItemAbstractComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemAbstractServiceLibrary} instances.
	 * @generated
	 */
	protected MMCLEVItemAbstractServiceLibraryItemProvider mmclevItemAbstractServiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemAbstractServiceLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemAbstractServiceLibraryAdapter() {
		if (mmclevItemAbstractServiceLibraryItemProvider == null) {
			mmclevItemAbstractServiceLibraryItemProvider = new MMCLEVItemAbstractServiceLibraryItemProvider(this);
		}

		return mmclevItemAbstractServiceLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemAbstractServiceLibrary} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemAbstractServiceLibraryItemProvider mmclevVersionedItemAbstractServiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemAbstractServiceLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemAbstractServiceLibraryAdapter() {
		if (mmclevVersionedItemAbstractServiceLibraryItemProvider == null) {
			mmclevVersionedItemAbstractServiceLibraryItemProvider = new MMCLEVVersionedItemAbstractServiceLibraryItemProvider(this);
		}

		return mmclevVersionedItemAbstractServiceLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemFlatMCAD} instances.
	 * @generated
	 */
	protected MMCLEVItemFlatMCADItemProvider mmclevItemFlatMCADItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemFlatMCAD}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemFlatMCADAdapter() {
		if (mmclevItemFlatMCADItemProvider == null) {
			mmclevItemFlatMCADItemProvider = new MMCLEVItemFlatMCADItemProvider(this);
		}

		return mmclevItemFlatMCADItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemFlatMCAD} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemFlatMCADItemProvider mmclevVersionedItemFlatMCADItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemFlatMCAD}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemFlatMCADAdapter() {
		if (mmclevVersionedItemFlatMCADItemProvider == null) {
			mmclevVersionedItemFlatMCADItemProvider = new MMCLEVVersionedItemFlatMCADItemProvider(this);
		}

		return mmclevVersionedItemFlatMCADItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemDriverServiceLibrary} instances.
	 * @generated
	 */
	protected MMCLEVItemDriverServiceLibraryItemProvider mmclevItemDriverServiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVItemDriverServiceLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVItemDriverServiceLibraryAdapter() {
		if (mmclevItemDriverServiceLibraryItemProvider == null) {
			mmclevItemDriverServiceLibraryItemProvider = new MMCLEVItemDriverServiceLibraryItemProvider(this);
		}

		return mmclevItemDriverServiceLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemDriverServiceLibrary} instances.
	 * @generated
	 */
	protected MMCLEVVersionedItemDriverServiceLibraryItemProvider mmclevVersionedItemDriverServiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link es.uah.aut.srg.micobs.mclev.library.mclevlibrary.MMCLEVVersionedItemDriverServiceLibrary}.
	 * @generated
	 */
	@Override
	public Adapter createMMCLEVVersionedItemDriverServiceLibraryAdapter() {
		if (mmclevVersionedItemDriverServiceLibraryItemProvider == null) {
			mmclevVersionedItemDriverServiceLibraryItemProvider = new MMCLEVVersionedItemDriverServiceLibraryItemProvider(this);
		}

		return mmclevVersionedItemDriverServiceLibraryItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * @generated
	 */
	public void dispose() {
		if (mmclevLibraryItemProvider != null) mmclevLibraryItemProvider.dispose();
		if (mmclevPackageItemProvider != null) mmclevPackageItemProvider.dispose();
		if (mmclevItemComponentItemProvider != null) mmclevItemComponentItemProvider.dispose();
		if (mmclevVersionedItemComponentItemProvider != null) mmclevVersionedItemComponentItemProvider.dispose();
		if (mmclevItemSAIItemProvider != null) mmclevItemSAIItemProvider.dispose();
		if (mmclevVersionedItemSAIItemProvider != null) mmclevVersionedItemSAIItemProvider.dispose();
		if (mmclevItemInterfaceItemProvider != null) mmclevItemInterfaceItemProvider.dispose();
		if (mmclevVersionedItemInterfaceItemProvider != null) mmclevVersionedItemInterfaceItemProvider.dispose();
		if (mmclevItemInterfaceMappingItemProvider != null) mmclevItemInterfaceMappingItemProvider.dispose();
		if (mmclevVersionedItemInterfaceMappingItemProvider != null) mmclevVersionedItemInterfaceMappingItemProvider.dispose();
		if (mmclevItemServiceLibraryItemProvider != null) mmclevItemServiceLibraryItemProvider.dispose();
		if (mmclevVersionedItemServiceLibraryItemProvider != null) mmclevVersionedItemServiceLibraryItemProvider.dispose();
		if (mmclevItemIODomainItemProvider != null) mmclevItemIODomainItemProvider.dispose();
		if (mmclevVersionedItemIODomainItemProvider != null) mmclevVersionedItemIODomainItemProvider.dispose();
		if (mmclevItemAODomainItemProvider != null) mmclevItemAODomainItemProvider.dispose();
		if (mmclevVersionedItemAODomainItemProvider != null) mmclevVersionedItemAODomainItemProvider.dispose();
		if (mmclevItemMCADItemProvider != null) mmclevItemMCADItemProvider.dispose();
		if (mmclevVersionedItemMCADItemProvider != null) mmclevVersionedItemMCADItemProvider.dispose();
		if (mmclevItemAbstractComponentItemProvider != null) mmclevItemAbstractComponentItemProvider.dispose();
		if (mmclevVersionedItemAbstractComponentItemProvider != null) mmclevVersionedItemAbstractComponentItemProvider.dispose();
		if (mmclevItemAbstractServiceLibraryItemProvider != null) mmclevItemAbstractServiceLibraryItemProvider.dispose();
		if (mmclevVersionedItemAbstractServiceLibraryItemProvider != null) mmclevVersionedItemAbstractServiceLibraryItemProvider.dispose();
		if (mmclevItemFlatMCADItemProvider != null) mmclevItemFlatMCADItemProvider.dispose();
		if (mmclevVersionedItemFlatMCADItemProvider != null) mmclevVersionedItemFlatMCADItemProvider.dispose();
		if (mmclevItemDriverServiceLibraryItemProvider != null) mmclevItemDriverServiceLibraryItemProvider.dispose();
		if (mmclevVersionedItemDriverServiceLibraryItemProvider != null) mmclevVersionedItemDriverServiceLibraryItemProvider.dispose();
	}

}
