«REM»
/*******************************************************************************
 * Copyright (c) 2013-2015 UAH Space Research Group.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     MICOBS SRG Team - Initial API and implementation
 ******************************************************************************/
«ENDREM»
«IMPORT mclevmcad»
«IMPORT mclevflatmcad»
«IMPORT mclevcmp»

«EXTENSION template::MCLEVStringHelper»
«EXTENSION template::MCLEVUtil»
«EXTENSION template::EDROOMUtil»
«EXTENSION template::GNUMakeStringHelper»
«EXTENSION template::EDROOMStringHelper»

«DEFINE main FOR mclevflatmcad::MFlatMCAD»
«FOREACH this.targets AS target -»
«FILE ((MMCADeployment)this.referencedElement).getDeploymentFolderName(target.leafDeploymentAlternative, target.deploymentPlatform) + "/include/main/edroom_glue.h" -»
#ifndef MAIN__EDROOM_GLUE_H
#define MAIN__EDROOM_GLUE_H

#include <public/config.h>
#include <public/edroomsl_iface_v1.h>

«FOREACH target.components.component.toSet() AS component -»
#include <public/«component.getElementName().toLowerDefString()».h>
«ENDFOREACH -»

class CEDROOMSystemMemory{

«FOREACH target.components AS instance -»
	CEDROOMMessage	«instance.name.toLowerDefString()»Messages[10];
	TEDROOMBool	«instance.name.toLowerDefString()»MessagesMarks[10];
	CEDROOMQueue::CQueueNode	«instance.name.toLowerDefString()»QueueNodes[10];
	TEDROOMBool	«instance.name.toLowerDefString()»QueueNodesMarks[10];

«ENDFOREACH -»
	public:
 
 «FOREACH target.components AS instance -»
	«instance.component.name»::CEDROOMMemory «instance.name.toLowerDefString()»Memory;

«ENDFOREACH -»
	void SetMemory();
};

class CEDROOMSystemCommSAP{

    friend class CEDROOMSystemDeployment;
 
	CEDROOMLocalCommSAP m_localCommSAP;
	CEDROOMLocalConnection connections[«target.getEDROOMConnections().size.toString()»];
 
«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	«instance.component.name» * mp_«instance.name.toLowerDefString()»;
«ENDFOREACH -»

	void SetComponents(«target.getEDROOMCPPComponentInstances().first().component.name» * p_«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
					   , «instance.component.name» * p_«instance.name.toLowerDefString()»
«ENDFOREACH -»
		 );

«FOREACH target.getEDROOMConnections() AS connection -»
	static TEDROOMSignal «connection.clientInstance.name.toLowerDefString()»_«connection.clientInstance.component.name»_«connection.clientPort.name»__«connection.serverInstance.name.toLowerDefString()»_«connection.serverInstance.component.name»_«connection.serverPort.name»(TEDROOMSignal signal);
	static TEDROOMSignal «connection.serverInstance.name.toLowerDefString()»_«connection.serverInstance.component.name»_«connection.serverPort.name»__«connection.clientInstance.name.toLowerDefString()»_«connection.clientInstance.component.name»_«connection.clientPort.name»(TEDROOMSignal signal);

«ENDFOREACH -»

	void RegisterInterfaces();
	void SetLocalConnections();
	void SetRemoteConnections();
	void SetConnections();
 
};

class CEDROOMSystemDeployment{
 
	Pr_Kernel	kernel;
 
	CEDROOMSystemMemory   systemMemory;
	CEDROOMSystemCommSAP  systemCommSAP;
 
«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	«instance.component.name» * mp_«instance.name.toLowerDefString()»;

«ENDFOREACH -»
	public:
 
	CEDROOMSystemDeployment();
 
	void Config(«target.getEDROOMCPPComponentInstances().first().component.name» * p_«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
			    , «instance.component.name» * p_«instance.name.toLowerDefString()»
«ENDFOREACH -»
				);
 
	void Start();
 
«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	«instance.component.name»::CEDROOMMemory * Get«instance.name.toLowerDefString().toFirstUpper()»Memory(){return &systemMemory.«instance.name.toLowerDefString()»Memory;}
«ENDFOREACH -»
 
};

/*PROTECTED REGION END*/

#endif // MAIN__EDROOM_GLUE_H
«ENDFILE»
«FILE ((MMCADeployment)this.referencedElement).getDeploymentFolderName(target.leafDeploymentAlternative, target.deploymentPlatform) + "/src/edroom_glue.cpp"»

#include <public/edroom_glue.h>
#include <public/edroomsl_types.h>
 
//*****************************************************************************
// Main Wait

void MainWait(«target.getEDROOMCPPComponentInstances().first().component.name» &«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
			  , «instance.component.name» &«instance.name.toLowerDefString()»
«ENDFOREACH -»
			 )
{ 
	Pr_Time waitTime(Pr_Time::secns, 3);

#ifdef _EDROOM_SYSTEM_CLOSE
	while(!«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()».EDROOMIsComponentFinished()
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
		  || !«instance.name.toLowerDefString()».EDROOMIsComponentFinished()
«ENDFOREACH -»
		)
		Pr_DelayIn(waitTime);
#else
	while(true);
#endif

}

//*****************************************************************************
// SetMemory
 
void CEDROOMSystemMemory::SetMemory(){

«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	«instance.name.toLowerDefString()»Memory.SetMemory(10, «instance.name.toLowerDefString()»Messages, &«instance.name.toLowerDefString()»MessagesMarks[0],
				«instance.name.toLowerDefString()»QueueNodes, &«instance.name.toLowerDefString()»QueueNodesMarks[0]);
«ENDFOREACH -»

}
 
//*****************************************************************************
// SetComponents

void CEDROOMSystemCommSAP::SetComponents(«target.getEDROOMCPPComponentInstances().first().component.name» * p_«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
			 							 , «instance.component.name» * p_«instance.name.toLowerDefString()»
«ENDFOREACH -»
										 )
{

«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	mp_«instance.name.toLowerDefString()» = p_«instance.name.toLowerDefString()»;
«ENDFOREACH -»

}

//*****************************************************************************
//*****************************************************************************
// Signal Translation Functions
//*****************************************************************************
//*****************************************************************************

«FOREACH target.getEDROOMConnections() AS connection -»
TEDROOMSignal CEDROOMSystemCommSAP::«connection.serverInstance.name.toLowerDefString()»_«connection.serverInstance.component.name»_«connection.serverPort.name»__«connection.clientInstance.name.toLowerDefString()»_«connection.clientInstance.component.name»_«connection.clientPort.name»(TEDROOMSignal signal)
{
 
	TEDROOMSignal signalIn;
 
	switch(signal){

«IF connection.clientPort.interface.getEDROOMProtocolOfInterface() != null -»
«FOREACH connection.clientPort.interface.getEDROOMProtocolOfInterface().outputMessages AS message ITERATOR  i -»
		case(«connection.serverInstance.component.name»::«i.counter0»): signalIn=«connection.clientInstance.component.name»::«i.counter0»; break;

«ENDFOREACH -» 
«ENDIF -»
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}


TEDROOMSignal CEDROOMSystemCommSAP::«connection.clientInstance.name.toLowerDefString()»_«connection.clientInstance.component.name»_«connection.clientPort.name»__«connection.serverInstance.name.toLowerDefString()»_«connection.serverInstance.component.name»_«connection.serverPort.name»(TEDROOMSignal signal)
{
 
	TEDROOMSignal signalIn;
 
	switch(signal){

«IF connection.serverPort.interface.getEDROOMProtocolOfInterface() != null -»
«FOREACH connection.serverPort.interface.getEDROOMProtocolOfInterface().inputMessages AS message ITERATOR i -»
		case(«connection.clientInstance.component.name»::«(i.counter0 + connection.clientPort.interface.getEDROOMProtocolOfInterface().outputMessages.size)»): signalIn=«connection.serverInstance.component.name»::«(i.counter0 + connection.clientPort.interface.getEDROOMProtocolOfInterface().outputMessages.size)»; break;

«ENDFOREACH -» 
«ENDIF -»
		default: signalIn=(TEDROOMSignal)(-1); break;
 
	}
	return signalIn;
 
}
«ENDFOREACH -» 

 
//*****************************************************************************
// RegisterInterfaces
 
void CEDROOMSystemCommSAP::RegisterInterfaces(){

	TEDROOMInt32 lastInterface = 0;

«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	lastInterface = mp_«instance.name.toLowerDefString()»->EDROOMConfig(&m_localCommSAP);
«FOREACH instance.component.externalPorts AS port -»
	m_localCommSAP.RegisterInterface(lastInterface++, mp_«instance.name.toLowerDefString()»->«port.name», 
								     mp_«instance.name.toLowerDefString()», "«instance.name». «port.name»"); 
«ENDFOREACH -»
«FOREACH instance.component.internalPorts AS port -»
	m_localCommSAP.RegisterInterface(lastInterface++, mp_«instance.name.toLowerDefString()»->«port.name», 
								     mp_«instance.name.toLowerDefString()», "«instance.name». «port.name»"); 
«ENDFOREACH -»
«ENDFOREACH -»
}
 
 
//*****************************************************************************
////SetLocalConnections
 
void CEDROOMSystemCommSAP::SetLocalConnections(){

	TEDROOMInt32 i = 0; 

«FOREACH target.getEDROOMConnections() AS connection -»
	m_localCommSAP.Connect(mp_«connection.clientInstance.name.toLowerDefString()»->«connection.clientPort.name», 
					mp_«connection.serverInstance.name.toLowerDefString()»->«connection.serverPort.name», connections[i++], 
					«connection.clientInstance.name.toLowerDefString()»_«connection.clientInstance.component.name»_«connection.clientPort.name»__«connection.serverInstance.name.toLowerDefString()»_«connection.serverInstance.component.name»_«connection.serverPort.name»,
					«connection.serverInstance.name.toLowerDefString()»_«connection.serverInstance.component.name»_«connection.serverPort.name»__«connection.clientInstance.name.toLowerDefString()»_«connection.clientInstance.component.name»_«connection.clientPort.name»);

«ENDFOREACH -»

}
 
 
//*****************************************************************************
// SetRemoteConnections
 
void CEDROOMSystemCommSAP::SetRemoteConnections(){
 
}
 
//*****************************************************************************
// SetConnections
 
void CEDROOMSystemCommSAP::SetConnections(){
 
	SetLocalConnections();
	SetRemoteConnections();
 
}
 
//*****************************************************************************
// CEDROOMSystemDeployment Constructor
 
CEDROOMSystemDeployment::CEDROOMSystemDeployment(){
 
	EDROOMFDeb<<"InitTrace";
	systemMemory.SetMemory();
 
}
 
//*****************************************************************************
////Config

void CEDROOMSystemDeployment::Config(«target.getEDROOMCPPComponentInstances().first().component.name» * p_«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
									 , «instance.component.name» * p_«instance.name.toLowerDefString()»
«ENDFOREACH -»
									)
{
«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	mp_«instance.name.toLowerDefString()» = p_«instance.name.toLowerDefString()»;
«ENDFOREACH -»
 
	systemCommSAP.SetComponents(p_«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst() AS instance -»
								, p_«instance.name.toLowerDefString()»
«ENDFOREACH -»
								);

	systemCommSAP.RegisterInterfaces();
	systemCommSAP.SetConnections();
 
}
 
//*****************************************************************************
////Start
 
void CEDROOMSystemDeployment::Start(){

«FOREACH target.getEDROOMCPPComponentInstances() AS instance -»
	mp_«instance.name.toLowerDefString()»->EDROOMStart();
«ENDFOREACH -»  
 
	kernel.Start();

	MainWait(*mp_«target.getEDROOMCPPComponentInstances().first().name.toLowerDefString()»
«FOREACH target.getEDROOMCPPComponentInstances().withoutFirst().withoutLast() AS instance -»
			 , *mp_«instance.name.toLowerDefString()»
«ENDFOREACH -»
			 );
 
	EDROOMFDeb << "	EndEvent\nTraceEnd\n";
	EDROOMFDeb.close();
 
}

«ENDFILE»
«FILE ((MMCADeployment)this.referencedElement).getDeploymentFolderName(target.leafDeploymentAlternative, target.deploymentPlatform) + "/defs.mk" - »

# PROTECTED REGION ID(«((MMCADeployment)this.referencedElement).getDeploymentFolderName(target.leafDeploymentAlternative, target.deploymentPlatform)»_src) ENABLED START

SRCS+=$(wildcard $R/«getMainFolder()»/«((MMCADeployment)this.referencedElement).getDeploymentFolderName(target.leafDeploymentAlternative, target.deploymentPlatform)»/src/*.cpp)

# PROTECTED REGION END

«ENDFILE»
«ENDFOREACH -»
«ENDDEFINE»